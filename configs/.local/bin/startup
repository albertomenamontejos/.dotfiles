#! /bin/bash


internal_monitor=eDP-1-0
external_monitor=HDMI-0

monitor_add() {
	desktops=5 # How many desktops to move to the second monitor

	for desktop in $(bspc query -D -m $internal_monitor | sed "$desktops"q)
	  do
		bspc desktop $desktop --to-monitor $external_monitor
	  done

	# Remove "Desktop" created by bspwm
	bspc desktop Desktop --remove 
	bspc monitor $internal_monitor --reset-desktops 1 2 &
	bspc monitor $external_monitor --reset-desktops 3 4 5 6 7
}

monitor_remove() {
	bspc monitor $internal_monitor -a Desktop # Temp desktop because one desktop required per monitor

	# Move everything to external monitor to reorder desktops
	for desktop in $(bspc query -D -m $internal_monitor)
	do
		bspc desktop $desktop --to-monitor $external_monitor
	done

	# Now move everything back to internal monitor
	bspc monitor $external_monitor -a Desktop # Temp desktop

	for desktop in $(bspc query -D -m $external_monitor)
	do
		bspc desktop $desktop --to-monitor $internal_monitor
	done

	bspc desktop Desktop --remove  # Remove temp desktops
	bspc monitor $internal_monitor --reset-desktops 1 2 3 4 5 6 7
}

if [[ $(xrandr -q | grep 'HDMI-0 connected') ]]; then
    monitor_add
    sh ~/.screenlayout/monitor_dual.sh 
else
    monitor_remove
		sh ~/.screenlayout/monitor.sh 
fi

feh --bg-fill $HOME/Im√°genes/Fondos/fondo.jpg &

sh $HOME/.config/polybar/launch.sh

if [[ $(xrandr -q | grep 'HDMI-0 connected') ]]; then
     polybar top_external &
fi

# Picom
picom -b &
